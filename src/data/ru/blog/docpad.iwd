История сайта начинается с 2010 года, когда впервые был зарегистрирован домен klimchuk.com. Тогда он работал на самописной системе управления без названия, затем были попытки перевести его на рельсы MODX, но довести до ума не получилось. И наконец сейчас это просто статический сайт без всякого php или другого языка в бэкенде. Обычные html-файлы. Как я пришел к этому - далее.
Переход на MODX был ожидаемым этапом, так как сайт нужно было обновлять, а работал я плотно в последнее время именно с этой CMS. Но меня не устраивало то, что нельзя было просто и быстро выкладывать изменения на сайт, приходилось думать о сохранности БД, делать бекапы и другие лишние и бесполезные манипуляции, когда можно все сделать гораздо проще.
Я благодарен Артему Сапегину за его статью о переходе на DocPad. Именно она меня подтолкнула к тому, чтобы заняться исследованием инструментов и построить процесс сборки собственного сайта. Суть этой заметки такая же, но с описанием отдельных моментов, с которыми пришлось столкнуться.

Структура проекта, список инструментов
Для начала определимся, что необходимо для начала работы. Собирать сайт будет инструмент DocPad, который работает на JavaScript и запускается на сервере, а значит нужен nodejs. Чтобы не знать проблем с установкой различных приложений, пакетов и плагинов - нам нужен менеджер пакетов для nodejs - npm. Как их установить в  Mac и Linux написано на сайте, ничего сложного. Пользователи Windows сами себе злобные буратины.
HTML я верстал в Jade, CSS писал в Stylus, стили на базе Bootstrap 3, использовал обычный JavaScript и jQuery, сборкой статики занимается grunt, весь сайт собирает docpad.
Все необходимые пакеты ставятся через npm install, jquery и bootstrap через bower. Ниже вот такие вот зависимости в package.json.
--- package.json ---
Структура проекта соответствует требованиям docpad, но в целом понятна и проста.
В корне проекта лежат необходимые файлы и конфиги для инструментов сборки, так же после установки пакетов там будет находится папка node_modules, bower_components и out. Далее по списку, что каждая значит:
bower_components - здесь будут хранится загруженные пакеты, указанные в конфигурации bower, в нашем случае jquery и bootstrap.
node_modules - установленные npm пакеты, необходимые для работы
out - каталог, где будут лежать готовые к использованию файлы сайта после его генерации
src - сами исходные файлы сайта: стили, шаблоны, страницы, скрипты.
.shipit - файл конфигурации для замечательного скрипта Артема Сапегина, позволяющего одной командой выкладывать весь сайт на хостинг
bower.json - файл, в котором указываем, какие bower-пакеты установить
docpad.coffee - основной конфигурационный файл для docpad
gruntfile.js - конфигурационный файл для инструмента grunt, именно он отвечает за сборку всез стилей и скриптов на страницах
packages.json - файл, в котором перечисленны npm-пакеты, обязательные к установке. Без них ничего работать не будет.
run.sh - небольшой скрипт, который позволяет быстро запускать сайт локально для отладки.
### src
assets - стили и скрипты, которые следует предварительно обработать grunt-ом
data/ru и data/en - файлы самого сайта, соответственно две языковые версии
files - те файлы, которые сохраняются на сайт в неизменном виде, например картинки; туда же grunt компилирует стили и сжатые скрипты
layouts - шаблоны страниц сайта, в моем случае они написаны на языке Jade, который затем преобразуется в html.

Проблемные места

Деплой на сервер

Работа с сайтом

Выводы

 Необходимо разбить статью на несколько составных частей

